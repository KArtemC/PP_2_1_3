[1mdiff --git a/src/main/java/App.java b/src/main/java/App.java[m
[1mindex d7c858e..1ee9fdb 100644[m
[1m--- a/src/main/java/App.java[m
[1m+++ b/src/main/java/App.java[m
[36m@@ -5,8 +5,13 @@[m [mpublic class App {[m
     public static void main(String[] args) {[m
         ApplicationContext applicationContext =[m
                 new AnnotationConfigApplicationContext(AppConfig.class);[m
[31m-        HelloWorld bean =[m
[31m-                (HelloWorld) applicationContext.getBean("helloworld");[m
[31m-        System.out.println(bean.getMessage());[m
[32m+[m
[32m+[m[32m        HelloWorld bean1 = (HelloWorld) applicationContext.getBean("helloworld");[m
[32m+[m[32m        HelloWorld bean2 = (HelloWorld) applicationContext.getBean("helloworld");[m
[32m+[m[32m        System.out.println(bean1==bean2);[m
[32m+[m
[32m+[m[32m        Cat cat1 = (Cat) applicationContext.getBean("Cat");[m
[32m+[m[32m        Cat cat2 = (Cat) applicationContext.getBean("Cat");[m
[32m+[m[32m        System.out.println(cat1==cat2);[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/AppConfig.java b/src/main/java/AppConfig.java[m
[1mindex f21b954..e521406 100644[m
[1m--- a/src/main/java/AppConfig.java[m
[1m+++ b/src/main/java/AppConfig.java[m
[36m@@ -4,11 +4,19 @@[m [mimport org.springframework.context.annotation.Scope;[m
 [m
 @Configuration[m
 public class AppConfig {[m
[31m- [m
[31m-    @Bean(name="helloworld")[m
[32m+[m
[32m+[m[32m    @Bean(name = "helloworld")[m
     public HelloWorld getHelloWorld() {[m
         HelloWorld helloWorld = new HelloWorld();[m
         helloWorld.setMessage("Hello World!");[m
         return helloWorld;[m
     }[m
[32m+[m
[32m+[m[32m    @Bean(name = "Cat")[m
[32m+[m[32m    @Scope("prototype")[m
[32m+[m[32m    public Cat getCat() {[m
[32m+[m[32m        Cat cat = new Cat();[m
[32m+[m[32m        cat.setName("–ö–æ—à–∫–∞");[m
[32m+[m[32m        return cat;[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/test/java/AppTest.java b/src/test/java/AppTest.java[m
[1mindex aad90cb..3ddc706 100644[m
[1m--- a/src/test/java/AppTest.java[m
[1m+++ b/src/test/java/AppTest.java[m
[36m@@ -1,30 +1,30 @@[m
[31m-//import org.junit.Assert;[m
[31m-//import org.junit.Test;[m
[31m-//import org.junit.runner.RunWith;[m
[31m-//import org.springframework.beans.factory.annotation.Autowired;[m
[31m-//import org.springframework.context.ApplicationContext;[m
[31m-//import org.springframework.test.context.ContextConfiguration;[m
[31m-//import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;[m
[31m-//[m
[31m-//[m
[31m-//@RunWith(SpringJUnit4ClassRunner.class)[m
[31m-//@ContextConfiguration(classes = AppConfig.class)[m
[31m-//public class AppTest {[m
[31m-//[m
[31m-//    @Autowired[m
[31m-//    private ApplicationContext applicationContext;[m
[31m-//[m
[31m-//    @Test[m
[31m-//    public void mainTest() {[m
[31m-//        HelloWorld tree =[m
[31m-//                applicationContext.getBean(HelloWorld.class);[m
[31m-//        HelloWorld leaf =[m
[31m-//                applicationContext.getBean(HelloWorld.class);[m
[31m-//[m
[31m-//        Cat one = applicationContext.getBean(Cat.class);[m
[31m-//        Cat two = applicationContext.getBean(Cat.class);[m
[31m-//[m
[31m-//        Assert.assertSame("–¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω, –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏–Ω–∞ HelloWorld", tree, leaf);[m
[31m-//        Assert.assertNotSame("–¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω, –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏–Ω–∞ Cat", one, two);[m
[31m-//    }[m
[31m-//}[m
[32m+[m[32mimport org.junit.Assert;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m[32mimport org.junit.runner.RunWith;[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32mimport org.springframework.context.ApplicationContext;[m
[32m+[m[32mimport org.springframework.test.context.ContextConfiguration;[m
[32m+[m[32mimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;[m
[32m+[m
[32m+[m
[32m+[m[32m@RunWith(SpringJUnit4ClassRunner.class)[m
[32m+[m[32m@ContextConfiguration(classes = AppConfig.class)[m
[32m+[m[32mpublic class AppTest {[m
[32m+[m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    private ApplicationContext applicationContext;[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void mainTest() {[m
[32m+[m[32m        HelloWorld tree =[m
[32m+[m[32m                applicationContext.getBean(HelloWorld.class);[m
[32m+[m[32m        HelloWorld leaf =[m
[32m+[m[32m                applicationContext.getBean(HelloWorld.class);[m
[32m+[m
[32m+[m[32m        Cat one = applicationContext.getBean(Cat.class);[m
[32m+[m[32m        Cat two = applicationContext.getBean(Cat.class);[m
[32m+[m
[32m+[m[32m        Assert.assertSame("–¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω, –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏–Ω–∞ HelloWorld", tree, leaf);[m
[32m+[m[32m        Assert.assertNotSame("–¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω, –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏–Ω–∞ Cat", one, two);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
